"""
Django settings for blogin_project project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import dj_database_url

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# ENVIRONMENT = os.environ.get('ENVIRONMENT', default = 'production')

DATABASE_URL = os.environ.get('DATABASE_URL')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-eq65!vsmiho!h*t-z%ht^-$@gkjk@az-1wylm5-@d6*)$ke(5i')

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = int(os.environ.get('DEBUG', default = 0))
DEBUG = os.environ.get('DJANGO_DEBUG', '').lower() == 'true'
# print("**********debug value************")
# print(DEBUG, ": ", type(DEBUG))
# DEBUG = True

# ALLOWED_HOSTS = ['.railway.app', 'localhost', '127.0.0.1', '192.168.29.247', '0.0.0.0']
ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['blogxyz-production.up.railway.app', '127.0.0.1']
# ALLOWED_HOSTS = ["127.0.0.1", ".railway.app"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic', # new
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # 3rd party
    'allauth',
    'allauth.account',
    'ckeditor',
    'ckeditor_uploader',
    'corsheaders',
    # Local
    'users.apps.UsersConfig',
    'blogs.apps.BlogsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # new
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CSRF_TRUSTED_ORIGINS = ['https://*.bloginxyz2-production.up.railway.app']
CSRF_TRUSTED_ORIGINS = ['https://*.bloginxyz-production.up.railway.app']

ROOT_URLCONF = 'blogin_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'custom_filters': 'blogs.custom_filters',
            }
        },
    },
]

WSGI_APPLICATION = 'blogin_project.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_USER_MODEL = 'users.CustomUser'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# media files
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media' # this is where the media will be stored

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# allauth configs

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # new

ACCOUNT_PASSWORD_CHANGE_REDIRECT_URL = 'login'
LOGIN_REDIRECT_URL = 'home'
ACCOUNT_LOGOUT_REDIRECT = 'home'

ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_USERNAME_REQUIRED = False # New
ACCOUNT_AUTHENTICATION_METHOD = 'email' # New
ACCOUNT_EMAIL_REQUIRED = True # New
# ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_UNIQUE_EMAIL = True # New

SITE_ID = 1

DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL')
EMAIL_HOST = os.environ.get('EMAIL_HOST')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 587))
EMAIL_USE_TLS = True
# # EMAIL_USE_SSL = True


CKEDITOR_UPLOAD_PATH = 'content/ckeditor/'

CKEDITOR_CONFIGS = {
    # 'default': {
    #     # 'skin': 'moono',
    #     # 'skin': 'office2013',
    #     'toolbar_Basic': [
    #         ['Source', '-', 'Bold', 'Italic']
    #     ],
    #     'toolbar_YourCustomToolbarConfig': [
    #         {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates', 'Preview']},
    #         {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
    #         # {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
    #         {'name': 'forms',
    #          'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
    #                    'HiddenField']},
    #         '/',
    #         {'name': 'basicstyles',
    #          'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
    #         {'name': 'paragraph',
    #          'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
    #                    'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
    #                    'Language']},
    #         {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
    #         {'name': 'insert',
    #          'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
    #         '/',
    #         {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
    #         {'name': 'colors', 'items': ['TextColor', 'BGColor']},
    #         {'name': 'tools', 'items': ['ShowBlocks', 'About']},
    #         # {'name': 'about', 'items': ['About']},
    #         '/',  # put this to force next toolbar on new line
    #     ],
    #     'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
    #     'tabSpaces': 4,
    #     'extraPlugins': ','.join([
    #         'uploadimage', # the upload image feature
    #         # your extra plugins here
    #         'div',
    #         'autolink',
    #         'autoembed',
    #         'embedsemantic',
    #         'autogrow',
    #         # 'devtools',
    #         'widget',
    #         'lineutils',
    #         'clipboard',
    #         'dialog',
    #         'dialogui',
    #         'elementspath'
    #     ]),
    # },
    'default': {
        # 'skin': 'moono',
        # 'skin': 'office2013',
        'toolbar_Basic': [
            ['Bold', 'Italic']
        ],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']},
            {'name': 'links', 'items': ['Link']},
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize', 'TextColor', 'BGColor', 'Image', 'Table', 'Smiley']},
        ],
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        'height': '90vh',
        'width': '100%',
        'allowedContent': True,
        'filebrowserWindowHeight': 725,
        'filebrowserWindowWidth': 940,
        # 'toolbarCanCollapse': True,
        # 'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage', # the upload image feature
            # your extra plugins here
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            # 'autogrow',
            # 'devtools',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
    },

}

CKEDITOR_IMAGE_BACKEND = 'pillow'

# to make debug_toolbar in docker we have to set the Internal ips
# This is docker specific, else just set it to 127.0.0.1

# django-debug-toolbar
import socket
hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
INTERNAL_IPS = [ip[:-1] + "1" for ip in ips]


if not DEBUG:
    DATABASES = {
        "default": dj_database_url.config(
            default=DATABASE_URL, conn_max_age=1000
        ),
        }
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    SECURE_BROWSER_XSS_FILTER = True # new
    X_FRAME_OPTIONS = 'DENY'
    # redirect all non-HTTPS traffic to HTTPS
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 3600 # new
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

